ind_vec[ind_vec %in% ind == FALSE] = NA
ind_vec[ind_vec %in% ind == TRUE] = 1
empty_raster <- raster(matrix(ind_vec, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(empty_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
data_monthly[[1]]$regine_main
?lapply
get_polygon <- function(data) {
print(data$regine_main)
# Read watershed indices
wsh_index <- data$wsh_index
wsh_index <- as.numeric(wsh_index) + 1
# Create raster
all_index <- seq(1, 1550 * 1195)
all_index[all_index %in% ind == FALSE] = NA
all_index[all_index %in% ind == TRUE] = 1
tmp_raster <- raster(matrix(all_index, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(tmp_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
# Raster to polygon
wsh_poly <- rasterToPolygons(empty_raster, dissolve = TRUE)
wsh_poly <- spTransform(wsh_poly, CRS("+init=epsg:4326"))
# Augment to data
data$wsh_poly <- wsh_poly
}
lapply(data_monthly, get_polygon)
data_monthly[1:10]
# Libraries
rm(list=ls())
library(raster)
library(leaflet)
library(rgeos)
# Determine polygon
get_polygon <- function(data) {
print(data$regine_main)
# Read watershed indices
wsh_index <- data$wsh_index
wsh_index <- as.numeric(wsh_index) + 1
# Create raster
all_index <- seq(1, 1550 * 1195)
all_index[all_index %in% ind == FALSE] = NA
all_index[all_index %in% ind == TRUE] = 1
tmp_raster <- raster(matrix(all_index, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(tmp_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
# Raster to polygon
wsh_poly <- rasterToPolygons(empty_raster, dissolve = TRUE)
wsh_poly <- spTransform(wsh_poly, CRS("+init=epsg:4326"))
# Augment to data
data$wsh_poly <- wsh_poly
}
# Test the stuff
load("senorge_monthly_v20.RData")
data_monthly <- data_monthly[1:10]
lapply(data_monthly, get_polygon)
# Plot maps
istat <- 1
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
addPolygons(data = data_monthly[[istat]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = data_monthly[[istat]]$metadata$longitude,
lat = data_monthly[[istat]]$metadata$latitude,
layerId = "selected_stat",
color = "black",
radius = 4,
stroke = TRUE,
opacity = 1,
fillOpacity = 0)
# # Load data
#
# load("senorge_monthly_v20.RData")
#
# istat <- 500
#
# # Read watershed indices
#
# wsh_index <- data_monthly[[istat]]$wsh_index
#
# ind <- as.numeric(wsh_index) + 1
#
# # Create raster
#
# nrow = 1550
# ncol = 1195
#
# ncells = nrow * ncol
#
# ind_vec <- seq(1, ncells)
#
# ind_vec[ind_vec %in% ind == FALSE] = NA
# ind_vec[ind_vec %in% ind == TRUE] = 1
#
# empty_raster <- raster(matrix(ind_vec, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
#
# crs(empty_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
rm(list=ls())
library(raster)
library(leaflet)
library(rgeos)
# Determine polygon
get_polygon <- function(data) {
print(data$regine_main)
# Read watershed indices
wsh_index <- data$wsh_index
wsh_index <- as.numeric(wsh_index) + 1
# Create raster
all_index <- seq(1, 1550 * 1195)
all_index[all_index %in% wsh_index == FALSE] = NA
all_index[all_index %in% wsh_index == TRUE] = 1
tmp_raster <- raster(matrix(all_index, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(tmp_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
# Raster to polygon
wsh_poly <- rasterToPolygons(empty_raster, dissolve = TRUE)
wsh_poly <- spTransform(wsh_poly, CRS("+init=epsg:4326"))
# Augment to data
data$wsh_poly <- wsh_poly
}
# Test the stuff
load("senorge_monthly_v20.RData")
data_monthly <- data_monthly[1:10]
lapply(data_monthly, get_polygon)
rm(list=ls())
library(raster)
library(leaflet)
library(rgeos)
# Determine polygon
get_polygon <- function(data) {
print(data$regine_main)
# Read watershed indices
wsh_index <- data$wsh_index
wsh_index <- as.numeric(wsh_index) + 1
# Create raster
all_index <- seq(1, 1550 * 1195)
all_index[all_index %in% wsh_index == FALSE] = NA
all_index[all_index %in% wsh_index == TRUE] = 1
tmp_raster <- raster(matrix(all_index, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(tmp_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
# Raster to polygon
wsh_poly <- rasterToPolygons(tmp_raster, dissolve = TRUE)
wsh_poly <- spTransform(wsh_poly, CRS("+init=epsg:4326"))
# Augment to data
data$wsh_poly <- wsh_poly
}
# Test the stuff
load("senorge_monthly_v20.RData")
data_monthly <- data_monthly[1:10]
lapply(data_monthly, get_polygon)
istat <- 1
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
addPolygons(data = data_monthly[[istat]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = data_monthly[[istat]]$metadata$longitude,
lat = data_monthly[[istat]]$metadata$latitude,
layerId = "selected_stat",
color = "black",
radius = 4,
stroke = TRUE,
opacity = 1,
fillOpacity = 0)
data_monthly[[istat]]$wsh_poly
rm(list=ls())
library(raster)
library(leaflet)
library(rgeos)
# Determine polygon
get_polygon <- function(data) {
print(data$regine_main)
# Read watershed indices
wsh_index <- data$wsh_index
wsh_index <- as.numeric(wsh_index) + 1
# Create raster
all_index <- seq(1, 1550 * 1195)
all_index[all_index %in% wsh_index == FALSE] = NA
all_index[all_index %in% wsh_index == TRUE] = 1
tmp_raster <- raster(matrix(all_index, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(tmp_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
# Raster to polygon
wsh_poly <- rasterToPolygons(tmp_raster, dissolve = TRUE)
wsh_poly <- spTransform(wsh_poly, CRS("+init=epsg:4326"))
# Augment to data
data$wsh_poly <- wsh_poly
return(data)
}
# Test the stuff
load("senorge_monthly_v20.RData")
data_monthly <- data_monthly[1:2]
lapply(data_monthly, get_polygon)
istat <- 1
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
addPolygons(data = data_monthly[[istat]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = data_monthly[[istat]]$metadata$longitude,
lat = data_monthly[[istat]]$metadata$latitude,
layerId = "selected_stat",
color = "black",
radius = 4,
stroke = TRUE,
opacity = 1,
fillOpacity = 0)
data_monthly[[istat]]$wsh_poly
data_monthly <- lapply(data_monthly, get_polygon)
istat <- 1
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
addPolygons(data = data_monthly[[istat]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = data_monthly[[istat]]$metadata$longitude,
lat = data_monthly[[istat]]$metadata$latitude,
layerId = "selected_stat",
color = "black",
radius = 4,
stroke = TRUE,
opacity = 1,
fillOpacity = 0)
istat <- 2
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
addPolygons(data = data_monthly[[istat]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = data_monthly[[istat]]$metadata$longitude,
lat = data_monthly[[istat]]$metadata$latitude,
layerId = "selected_stat",
color = "black",
radius = 4,
stroke = TRUE,
opacity = 1,
fillOpacity = 0)
setwd("~/")
setwd("C:/Work/Avrenningskart/qproj_db")
rm(list=ls())
# Function for computing polygons surrouding watersheds
wsh_polygon <- function(data) {
print(data$regine_main)
# Read watershed indices
wsh_index <- data$wsh_index
wsh_index <- as.numeric(wsh_index) + 1
# Create raster
all_index <- seq(1, 1550 * 1195)
all_index[all_index %in% wsh_index == FALSE] = NA
all_index[all_index %in% wsh_index == TRUE] = 1
tmp_raster <- raster(matrix(all_index, nrow = 1550, ncol = 1195, byrow = TRUE), xmn = -75000, xmx = 1120000, ymn = 6450000, ymx = 8000000)
crs(tmp_raster) <- sp::CRS("+proj=utm +zone=33 +datum=WGS84")
# Raster to polygon
wsh_poly <- rasterToPolygons(tmp_raster, dissolve = TRUE)
wsh_poly <- spTransform(wsh_poly, CRS("+init=epsg:4326"))
# Augment to data
data$wsh_poly <- wsh_poly
return(data)
}
# Load data
load("//hdata/fou/Avrenningskart/Data/data_r_files/senorge_monthly_v20.RData")
load("//hdata/fou/Avrenningskart/Data/data_r_files/senorge_yearly_v20.RData")
# Read metadata
df_meta <- read.table("//hdata/fou/Avrenningskart/Data/metadata.txt", header = TRUE, sep = ";", dec = ".")
# Keep stations with at least 5 years of data
nr_obs <- sapply(data_monthly, function(x) sum(is.na(x$Runoff)==FALSE))
ikeep <- nr_obs > 12*5
data_monthly <- data_monthly[ikeep]
data_yearly <- data_yearly[ikeep]
df_meta <- df_meta[ikeep, ]
# Polygons for watersheds
data_monthly <- lapply(data_monthly, wsh_polygon)
# Save to files
save(data_monthly, file = "data/senorge_monthly_v20.RData")
save(data_yearly, file = "data/senorge_yearly_v20.RData")
write.table(df_meta, file = "data/metadata.txt", quote = FALSE, sep = ";", row.names = FALSE)
setwd("C:/Work/Avrenningskart/qproj_db")
shiny::runApp()
data_monthly[[1]]$wsh_poly
data_monthly[1]$wsh_poly
shiny::runApp()
shiny::runApp()
data_monthly[[1]]$wsh_poly
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2)
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
data_monthly[[1]]$wsh_poly
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
# addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2)
df_meta
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
# addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = df_meta$longitude[1],
lat = df_meta$latitude[1],
layerId = "selected_stat",
color = "black",
radius = 8,
stroke = TRUE,
opacity = 1,
fillOpacity = 0)
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
# addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = df_meta$longitude[1],
lat = df_meta$latitude[1],
layerId = "selected_stat",
color = "black",
radius = 8,
stroke = TRUE,
opacity = 1,
fillOpacity = 0) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
pal <- colorBin(palette = "Blues",
na.color = "transparent",
bins = c(0, 500, 700, 1000, 1300, 1600, 2000, 2500, 3000, 4000, 6000))
# Create leaflet map
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
# addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = df_meta$longitude[1],
lat = df_meta$latitude[1],
layerId = "selected_stat",
color = "black",
radius = 8,
stroke = TRUE,
opacity = 1,
fillOpacity = 0) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2) %>%
addCircleMarkers(lng = df_meta$longitude[1],
lat = df_meta$latitude[1],
layerId = "selected_stat",
color = "black",
radius = 8,
stroke = TRUE,
opacity = 1,
fillOpacity = 0) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
?addPolygons
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2, col = "green") %>%
addCircleMarkers(lng = df_meta$longitude[1],
lat = df_meta$latitude[1],
layerId = "selected_stat",
color = "black",
radius = 8,
stroke = TRUE,
opacity = 1,
fillOpacity = 0) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
?addPolygons
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2, col = 450, fillOpacity = 0) %>%
addCircleMarkers(lng = df_meta$longitude[1],
lat = df_meta$latitude[1],
layerId = "selected_stat",
color = "black",
radius = 8,
stroke = TRUE,
opacity = 1,
fillOpacity = 0) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite",
#                options = providerTileOptions(noWrap = TRUE)) %>%
# addRasterImage(prec_raster, colors = pal, opacity = 0.7, group = "Precipitation", project=FALSE) %>%
addPolygons(data = data_monthly[[1]]$wsh_poly, weight = 2, col = 450)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket")
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster,
colors = pal,
opacity = 0.7,
group = "Precipitation",
project=FALSE) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
load("data/prec_raster.RData")
pal <- colorBin(palette = "Blues",
na.color = "transparent",
bins = c(0, 500, 700, 1000, 1300, 1600, 2000, 2500, 3000, 4000, 6000))
# Create leaflet map
leaflet() %>%
addTiles("http://opencache.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo2graatone&zoom={z}&x={x}&y={y}",
attribution = "© Kartverket") %>%
#addProviderTiles("Stamen.TonerLite", options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster,
colors = pal,
opacity = 0.7,
group = "Precipitation",
project=FALSE) %>%
fitBounds(min(df_meta$longitude),
min(df_meta$latitude),
max(df_meta$longitude),
max(df_meta$latitude))
df_meta$runoff_mean
round(df_meta$runoff_mean, digits = 0)
shiny::runApp()
shiny::runApp()
shiny::runApp()
leaflet() %>% addTiles() %>% setView(-118.456554, 34.09, 13) %>%
addMarkers(
lng = -118.456554, lat = 34.095,
label = "Label w/o surrounding box",
labelOptions = labelOptions(noHide = T, textOnly = TRUE))
?addMarkers
leaflet() %>% addTiles() %>% setView(-118.456554, 34.09, 13) %>%
addMarkers(
lng = -118.456554, lat = 34.095,
data = "Label w/o surrounding box",
labelOptions = labelOptions(noHide = T, textOnly = TRUE))
leaflet() %>% addTiles() %>% setView(-118.456554, 34.09, 13) %>%
addMarkers(
lng = -118.456554, lat = 34.095,
data = "Label w/o surrounding box")
leaflet() %>% addTiles() %>% setView(-118.456554, 34.09, 13) %>%
addMarkers(
lng = -118.456554, lat = 34.105,
label = "Default Label",
labelOptions = labelOptions(noHide = T))
?addMarkers
shiny::runApp()
library(leaflet)
leaflet() %>% addTiles() %>%
addMarkers(
lng=-118.456554, lat=34.078039,
label='This is a label')
update.packages("leaflet")
library(leaflet)
leaflet() %>% addTiles() %>%
addMarkers(
lng=-118.456554, lat=34.078039,
label='This is a label')

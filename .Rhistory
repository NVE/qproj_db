install.packages("shinydashboard")
## app.R ##
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?tabBox
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/App.R')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?tabbox
?tabBox
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?shinyApp
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?dashboardPage
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_app')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?dashboardBody
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?dashboardPage
?dashboardHeader
?dashboardSidebar
?dashboardBody
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_app/printing.R')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?box
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
install.packages("leaflet")
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?leafletOutput
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
df_meta$latitude
cbind(df_meta$latitude, df_meta$longitude)
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?addCircleMarkers
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
pal <- colorNumeric(
palette = "Blues",
domain = df_meta$runoff_eff
)
~pal(runoff_eff)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = pts)
addCircleMarkers(lng = df_meta$longitude, lat = df_meta$latitude, color = ~pal(runoff_eff))
binpal <- colorBin("Blues", df_meta$runoff_eff, 6, pretty = FALSE)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = pts)
addCircleMarkers(lng = df_meta$longitude, lat = df_meta$latitude, color = ~binpal(runoff_eff))
binpal(runoff_eff)
binpal(df_meta$runoff_eff)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = pts)
addCircleMarkers(lng = df_meta$longitude, lat = df_meta$latitude, color = ~binpal(df_meta$runoff_eff))
binpal(df_meta$runoff_eff)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = pts)
addCircleMarkers(lng = df_meta$longitude, lat = df_meta$latitude, color = binpal(df_meta$runoff_eff))
?colorBin
binpal <- colorBin("RdYlBu", df_meta$runoff_eff, 6, pretty = FALSE)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)
) %>%
#addMarkers(data = pts)
addCircleMarkers(lng = df_meta$longitude, lat = df_meta$latitude, color = binpal(df_meta$runoff_eff))
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?colorBin
binpal(df_meta$runoff_eff)
?cut
cbPalette <- c('#5060E8', '#91bfdb','#fee090','#fc8d59','#d73027')
cut(df_meta$runoff_eff, c(0.8, 1.2, 1.6, 2.0, 1000.0), labels = cbPalette)
cut(df_meta$runoff_eff, c(0, 0.8, 1.2, 1.6, 2.0, 1000.0), labels = cbPalette)
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?addCircleMarkers
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?addLegend
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
?leafletOutput
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
shiny::runApp('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db')
hbv_catchments <- readLines("data/hbv_catchments.json") %>% paste(collapse = "\n")
setwd("C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db")
hbv_catchments <- readLines("data/hbv_catchments.json") %>% paste(collapse = "\n")
?addGeoJSON
hbv_catchments
library(jsonlite)
# From http://data.okfn.org/data/datasets/geo-boundaries-world-110m
geojson <- readLines("json/countries.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
hbv_catchments <- readLines("data/hbv_catchments.json") %>% paste(collapse = "\n") %>% fromJSON(simplifyVector = FALSE)
hbv_catchments[[1]]
hbv_catchments[1]
hbv_catchments
hbv_catchments$features[[1]]$type
hbv_catchments$features[[1]]$properties
shiny::runApp()
shiny::runApp()
hbv_catchments[1]
hbv_catchments[[1]]
hbv_catchments[1]$type
hbv_catchments
hbv_catchments$features[[1]]
shiny::runApp()
hbv_catchments$features[[1]]$properties$Name
hbv_catchments$features[[2]]$properties$Name
hbv_catchments$features[[3]]$properties$Name
hbv_catchments$features[[4]]$properties$Name
sapply(hbv_catchments$features, function(x) x$properties$Name)
a <- sapply(hbv_catchments$features, function(x) x$properties$Name)
a[1]
View(df_meta)
?gsub
strsplit(a[1], " ")
strsplit(a[-1], " ")
b <- strsplit(a[1], " ")
b
b[2]
b[[1]][2]
b[[1]][2][1]
b[[1]][2]
stat_name <- sapply(hbv_catchments$features, function(x) x$properties$Name)
stat_name <- hbv_catchments$features[[1]]$properties$Name
stat_name <- strsplit(stat_name, " ")
stat_name <- stat_name[[2]][1]
stat_name <- hbv_catchments$features[[1]]$properties$Name
stat_name <- strsplit(stat_name, " ")
stat_name <- stat_name[[2]][1]
stat_name
stat_name <- stat_name[[1]][2]
stat_name
gsub(".0", "", stat_name)
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
hbv_shape <- readLines("data/hbv_catchments.json") %>% paste(collapse = "\n") %>% fromJSON(simplifyVector = FALSE)
hbv_shape_id <- sapply(hbv_shape, wsh_polygon_id)
hbv_shape_id <- sapply(hbv_shape$features, wsh_polygon_id)
hbv_shape_id
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
hbv_shape <- readLines("data/hbv_catchments.json") %>% paste(collapse = "\n") %>% fromJSON(simplifyVector = FALSE)
hbv_shape_id <- sapply(hbv_shape$features, wsh_polygon_id)
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
hbv_shape_id <- sapply(hbv_shape$features, wsh_polygon_id)
hbv_shape_id
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
a <- c(1,2,3)
a[-1]
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
hbv_shape_id <- sapply(hbv_shape$features, wsh_polygon_id)
hbv_shape_id
hbv_shape$features[[1]]$properties$Name
hbv_shape$features[[14]]$properties$Name
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
hbv_shape_id <- sapply(hbv_shape$features, wsh_polygon_id)
hbv_shape_id
shiny::runApp()
integet(0)
integer(0)
length(integer(0))
source('C:/Users/jmg/Dropbox/Work/Avrenningskart/qproj_db/plotting.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("rgdal")
shiny::runApp()
shiny::runApp()
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)) %>%
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE))
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.8, group = "Precipitation")
pal <- colorBin(palette = "Blues",
domain = values(prec_raster),
na.color = "transparent",
bins = 7)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.8, group = "Precipitation")
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.8, group = "Precipitation") %>%
addCircleMarkers(group = "Mean runoff",
lng = df_meta$longitude,
lat = df_meta$latitude,
layerId = paste(df_meta$regine_area, df_meta$main_no, sep = "."),
color = colors_qeff,
radius = 6,
stroke = FALSE,
opacity = 1,
fillOpacity = 1)
cbPalette <- c('#5060E8', '#91bfdb','#fee090','#fc8d59','#d73027')
colors_qeff <- cut(df_meta$runoff_eff, c(0, 0.8, 1.2, 1.6, 2.0, 1000.0), labels = cbPalette)
values <- c("< 0.8", "0.8 - 1.2", "1.2 - 1.6", "1.6 - 2.0", "> 2.0")
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.8, group = "Precipitation") %>%
addCircleMarkers(group = "Mean runoff",
lng = df_meta$longitude,
lat = df_meta$latitude,
layerId = paste(df_meta$regine_area, df_meta$main_no, sep = "."),
color = colors_qeff,
radius = 6,
stroke = FALSE,
opacity = 1,
fillOpacity = 1)
cbPalette <- c('#5060E8', '#91bfdb','#fee090','#fc8d59','#d73027')
colors_mean <- cut(df_meta$runoff_mean, c(0, 800, 1300, 1800, 2500, 10000.0), labels = cbPalette)
leaflet() %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(noWrap = TRUE)) %>%
addRasterImage(prec_raster, colors = pal, opacity = 0.8, group = "Precipitation") %>%
addCircleMarkers(group = "Mean runoff",
lng = df_meta$longitude,
lat = df_meta$latitude,
layerId = paste(df_meta$regine_area, df_meta$main_no, sep = "."),
color = colors_mean,
radius = 6,
stroke = FALSE,
opacity = 1,
fillOpacity = 1)
shiny::runApp()
shiny::runApp()
shiny::runApp()
data_monthly[[1]]$metadata$regine_main
shiny::runApp()
1000*15/60
shiny::runApp()
